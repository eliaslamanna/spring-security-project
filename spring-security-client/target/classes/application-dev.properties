#DataBaseMysql
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/spring_security?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=Scrapycoco$3
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true

app.url=http://localhost:8080


#Spring security (el cliente es api-client-oidc -> es el registrationId) es para los 2 redirectUri que defini en AuthorizationServerConfig
spring.security.oauth2.client.registration.api-client-oidc.provider=spring
spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
spring.security.oauth2.client.registration.api-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.api-client-oidc.authorizationb-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-oidc.redirect-uri="http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.api-client-oidc.scope=openid
spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc

spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-authorization-code.redirect_uri="http://127.0.0.1:8080/authorized"
spring.security.oauth2.client.registration.api-client-authorization-code.scope=api.read
spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code

spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:9000